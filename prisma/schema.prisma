generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id         Int      @id @default(autoincrement())
  fullName   String
  email      String   @unique
  password   String
  provider   String?
  providerId String?
  verified   DateTime

  role             UserRole          @default(USER)
  cart             Cart?
  order            Order[]
  verificationCode VerificationCode?

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique

  products Product[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Product {
  id       Int    @id @default(autoincrement())
  name     String
  imageUrl String

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  ingredients Ingredient[]
  variations  Variation[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Variation {
  id        Int  @id @default(autoincrement())
  price     Int
  size      Int?
  pizzaType Int?

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  cartItem CartItem[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Ingredient {
  id       Int    @id @default(autoincrement())
  name     String @unique
  price    Int
  imageUrl String

  products Product[]
  cartItem CartItem[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Cart {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @unique

  token       String?
  totalAmount Int     @default(0)

  cartItem CartItem[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model CartItem {
  id       Int @id @default(autoincrement())
  quantity Int

  variation   Variation @relation(fields: [variationId], references: [id])
  variationId Int

  cart   Cart @relation(fields: [cartId], references: [id])
  cartId Int

  ingredients Ingredient[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Order {
  id          Int     @id @default(autoincrement())
  fullName    String
  address     String
  email       String
  phone       String
  comment     String
  items       Json
  token       String
  totalAmount Int
  paymentId   String?

  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  status OrderStatus

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model VerificationCode {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  code String

  createAt DateTime @default(now())
}

enum OrderStatus {
  PENDING
  SUCCEEDED
  CANCELLED
}

enum UserRole {
  USER
  ADMIN
}
